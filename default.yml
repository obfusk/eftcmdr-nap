<%
  apps_file = file.sub(/\.yml\z/, '.apps')
  apps      = File.exists?(apps_file) ?
                File.read(apps_file).split : []
  logs      = Hash[apps.map do |x|
    [x, Hash[%x[ nap log #{x} assoc ].lines
          .map { |l| l.chomp.split /\s+/, 2 }]]
  end]
%>

_stat: &_stat                                                   # {{{1
  tag:              stat
  text:             status
  then:
    eval:           eval_nap_status
    code: |
      osh! 'nap status "$1"', app
                                                                # }}}1

_info: &_info                                                   # {{{1
  tag:              info
  text:             info
  then:
    eval:           eval_nap_info
    code: |
      osh! 'nap info "$1"', app
                                                                # }}}1

_log: &_log                                                     # {{{1
  ask:              ask_lines
  text:             How many lines?
  default:          100
  validate:         \A\d+\z
  then:
    eval:           eval_view_log
    code: |
      trap('INT') { ohai 'bye' }
      osh 'tail -f -n "$1" "$2"', ctx[:ask_lines], logfile
                                                                # }}}1

_hist: &_hist                                                   # {{{1
  tag:              hist
  text:             history
  then:
    ask:            ask_commits
    text:           How many commits?
    default:        100
    validate:       \A\d+\z
    then:
      eval:         eval_nap_hist
      code: |
        osh! 'nap log "$1" hist "$2" -v', app, ctx[:ask_commits]
                                                                # }}}1

_console: &_console                                             # {{{1
  tag:              console
  text:             rails console
  then:
    eval:           eval_rails_console
    code: |
      osh! 'RAILS_ENV=production bundle exec rails c', chdir: appdir
                                                                # }}}1

_psql: &_psql                                                   # {{{1
  tag:              psql
  text:             postgresql console
  then:
    eval:           eval_psql
    code: |
      osh! 'psql -h localhost -U "$1" "$1"', app, chdir: appdir
                                                                # }}}1

_start: &_start                                                 # {{{1
  tag:              start
  text:             start
  then:
    eval:           eval_nap_start
    code: |
      osh! 'nap start "$1"', app
                                                                # }}}1

_stop: &_stop                                                   # {{{1
  tag:              stop
  text:             stop
  then:
    eval:           eval_nap_stop
    code: |
      osh! 'nap stop "$1"', app
                                                                # }}}1

_reset: &_reset                                                 # {{{1
  tag:              reset
  text:             git reset
  then:
    show_text:      show_text_git_status
    code: |
      oshc!('git fetch --all; git status',
        merge: true, exit: true, chdir: appdir).stdout
    then:
      ask_yesno:    ask_yesno_git_reset
      text:         Are you sure?
      then:
        eval:       eval_git_reset
        code: |
          osh! 'git reset --hard', chdir: appdir
      else:
        eval:       eval_git_reset_cancelled
        code: |
          ohai 'git reset cancelled'
                                                                # }}}1

<% apps.each do |x| %>                                          # {{{1
_logs_<%= x %>: &_logs_<%= x %>
  tag:              log
  text:             view log
  then:
    menu:           menu_logs
    title:          log files
    text:           Choose a log file to view
    choices:
    <% logs[x].each_pair do |n,f| %>
      - tag:        <%= n.inspect %>
        text:       <%= f.inspect %>
        then:
          eval:     eval_logfile
          code: |
            logfile = logs[app][ctx[:menu_logs][:tag]]
          then: *_log
    <% end %>
<% end %>                                                       # }}}1

menu:               menu_apps                                   # {{{1
title:              apps
text:               Choose an app
choices:
<% apps.each do |x| %>
- tag:  <%= x %>
  text: <%= x %>
  then:
    eval:           eval_menu_apps
    code: |
      app     = ctx[:menu_apps][:tag]
      appdir  = "#{Dir.home}/#{app}/app"
    then:
      menu:         menu_commands
      title:        commands
      text:         Choose a command to run
      choices:
      - *_stat
      - *_info
      - *_logs_<%= x %>
      - *_hist
      - *_console
      - *_psql
      - *_start
      - *_stop
      - *_reset
<% end %>                                                       # }}}1
